// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  email       String       @unique
  pass        String
  salt        String
  username    String       @unique
  Tasks       Task[]
  Submissions Submission[]
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  author User @relation(fields: [userId], references: [id])
  userId Int

  name        String
  message     String
  Submissions Submission[]

  Tests Test[]
  timeLimit Int
  memLimit Int

  stars       Int @default(0)
  difficulty  Int @default(1)
  completions Int @default(0)
}

model Submission {
  id          Int      @id @default(autoincrement())
  submittedAt DateTime @default(now())

  task   Task @relation(fields: [taskId], references: [id])
  taskId Int

  code String
  lang String

  author      User         @relation(fields: [userId], references: [id])
  userId      Int
  TestResults TestResult[]

  verdict   String  @default("")
  isSuccess Boolean @default(false)
  isTested  Boolean @default(false)
}

model Test {
  id Int @id @default(autoincrement())

  isGenerator   Boolean @default(false)
  generatorLang String  @default("python")
  content       String

  task   Task @relation(fields: [taskId], references: [id])
  taskId Int

  TestResults TestResult[]
}

model TestResult {
  id Int @id @default(autoincrement())

  test   Test @relation(fields: [testId], references: [id])
  testId Int

  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId Int

  success      Boolean @default(false)
  errorMessage String  @default("")

  executionTime Int @default(0)
  memory        Int @default(0)
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
